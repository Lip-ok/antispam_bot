
// ____________________–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ –±–µ–∑ –∫–∞–ø—á–∏ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º_______________________________

// require("dotenv").config();
// const { Bot } = require("grammy");
// const express = require("express");

// // –ó–∞–¥–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
// const bot = new Bot(process.env.BOT_TOKEN);

// // –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
// const scamKeywords = [
//   "–ë–æ–Ω—É—Å", "–§—Ä–∏—Å–ø–∏–Ω—ã", "–ö—ç—à–±–µ–∫", "–î–∂–µ–∫–ø–æ—Ç", "–í—ã–∏–≥—Ä—ã—à", "–õ—É–¥–æ–º–∞–Ω", "–î–µ–ø–æ–∑–∏—Ç",
//   "–í—ã–≤–æ–¥ (–¥–µ–Ω–µ–≥)", "–°—Ç–∞–≤–∫–∏", "–ö–∞–∑–∏–Ω–æ", "–ë—É–∫–º–µ–∫–µ—Ä", "–õ–µ–≥–∫–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫",
//   "–ë–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π", "–ö—Ä–∏–ø—Ç–æ–∫–∞–∑–∏–Ω–æ", "–†–∞–∑–¥–∞—á–∞ –¥–µ–Ω–µ–≥", "–ü—Ä–æ–º–æ–∫–æ–¥",
//   "–ì–∞—Ä–∞–Ω—Ç–∏—è 100%", "–õ–µ–≥–∫–∏–µ –¥–µ–Ω—å–≥–∏", "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ", "–°–µ–∫—Ä–µ—Ç–Ω—ã–π –º–µ—Ç–æ–¥", "–í–∑–ª–æ–º",
//   "–ë–µ–∑ —Ä–∏—Å–∫–∞", "–í—ã–≤–µ–¥–∏ –¥–µ–Ω—å–≥–∏", "–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞", "–†–∞–±–æ—Ç–∞ –Ω–∞ –¥–æ–º—É",
//   "–ê–≤—Ç–æ–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "–õ–µ–≥–∫–∏–µ –±–∞–±–∫–∏", "–î–æ—Ö–æ–¥ –±–µ–∑ —É—Å–∏–ª–∏–π", "–†–∞–±–æ—á–∞—è —Å—Ö–µ–º–∞",
//   "–ë—ã—Å—Ç—Ä–æ–µ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–•–∞–π–ø", "–£–º–Ω–æ–∂—å –¥–µ–Ω—å–≥–∏",
//   "–ó–∞—Ä–∞–±–æ—Ç–∞–π –∑–∞ 5 –º–∏–Ω—É—Ç", "–î–æ—Ö–æ–¥ –Ω–∞ –ø–∞—Å—Å–∏–≤–µ", "–ë—ã—Å—Ç—Ä—ã–π –≤—ã–≤–æ–¥",
//   "–£–¥–≤–æ–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞", "–í–ª–æ–∂–∏ 100‚ÇΩ ‚Äì –ø–æ–ª—É—á–∏ 1000‚ÇΩ", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫",
//   "–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "–¢–æ–ø–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã", "–ë–∏–Ω–∞—Ä–Ω—ã–µ –æ–ø—Ü–∏–æ–Ω—ã",
//   "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å", "Airdrop", "–†–∞–∑–¥–∞—á–∞", "–ö—Ä–∏–ø—Ç–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
//   "–ë–∏—Ç–∫–æ–∏–Ω", "ETH (Ethereum)", "NFT-—Ä–æ–∑—ã–≥—Ä—ã—à", "–°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç",
//   "–ë–ª–æ–∫—á–µ–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞", "–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ –∫—Ä–∏–ø—Ç—É", "–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏—Ç"
// ];

// // –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
// const recentMessages = {};

// // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
// const containsScamWords = (text) => {
//   return scamKeywords.some(word => text.includes(word.toLowerCase()));
// };

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
// bot.on("message", async (ctx) => {
//   const text = ctx.message.text?.toLowerCase();
//   const chatId = ctx.chat.id;
//   const messageId = ctx.message.message_id;

//   // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
//   if (!recentMessages[chatId]) {
//     recentMessages[chatId] = [];
//   }

//   // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
//   recentMessages[chatId].push({ messageId, text });
  
//   // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
//   if (recentMessages[chatId].length > 10) {
//     recentMessages[chatId].shift();
//   }

//   if (text && containsScamWords(text)) {
//     const warningMessage = await ctx.reply(
//       "‚ö†Ô∏è –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥."
//     );

//     setTimeout(async () => {
//       try {
//         await ctx.api.deleteMessage(chatId, messageId);
//         await ctx.api.deleteMessage(chatId, warningMessage.message_id);
//       } catch (error) {
//         console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
//       }
//     }, 10000);
//   }
// });

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
// bot.on("edited_message", async (ctx) => {
//   const text = ctx.editedMessage.text?.toLowerCase();
//   const chatId = ctx.chat.id;
//   const messageId = ctx.editedMessage.message_id;

//   if (text && containsScamWords(text)) {
//     try {
//       await ctx.api.deleteMessage(chatId, messageId);
//       console.log("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:", messageId);
//     } catch (error) {
//       console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
//     }
//   }
// });

// // –ó–∞–ø—É—Å–∫ Express-—Å–µ—Ä–≤–µ—Ä–∞
// const app = express();
// const PORT = process.env.PORT || 3000;

// app.get("/", (req, res) => {
//   res.send("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!");
// });

// // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
// bot.start();
// app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));

// ____________________–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ –±–µ–∑ –∫–∞–ø—á–∏ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º_______________________________



// –±–æ—Ç —Å –ò–ò 


require("dotenv").config();
const { Bot } = require("grammy");
const { OpenAI } = require("openai");

const bot = new Bot(process.env.BOT_TOKEN);
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–µ–∫–ª–∞–º—É/—Å–∫–∞–º —á–µ—Ä–µ–∑ OpenAI
const isSuspiciousMessage = async (text) => {
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: "–¢—ã –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–ø–∞–º–∞ –≤ Telegram-—á–∞—Ç–µ. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∫–ª–∞–º—É, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ —Å–∫–∞–º, –æ—Ç–≤–µ—Ç—å '–î–∞'. –ò–Ω–∞—á–µ –æ—Ç–≤–µ—Ç—å '–ù–µ—Ç'." },
        { role: "developer", content: `–≠—Ç–æ —Ä–µ–∫–ª–∞–º–∞ –∏–ª–∏ —Å–∫–∞–º? –°–æ–æ–±—â–µ–Ω–∏–µ: "${text}"` },
      ],
      temperature: 0.2,
    });

    const result = response.choices[0]?.message?.content?.trim().toLowerCase();
    return result === "–¥–∞";
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–µ–∫—Å—Ç–∞:", error.message);
    return false;
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
bot.on("message:text", async (ctx) => {
  const chatId = ctx.chat.id;
  const messageId = ctx.message.message_id;
  const text = ctx.message.text;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ OpenAI
  const isSuspicious = await isSuspiciousMessage(text);

  if (isSuspicious) {
    const warnMsg = await ctx.reply("‚ö†Ô∏è –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ä–µ–∫–ª–∞–º—É –∏–ª–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ. –û–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 20 —Å–µ–∫—É–Ω–¥.");

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 20 —Å–µ–∫—É–Ω–¥
    setTimeout(async () => {
      try {
        await ctx.api.deleteMessage(chatId, messageId); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ctx.api.deleteMessage(chatId, warnMsg.message_id); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:", error.message);
      }
    }, 20000);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();
console.log("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");






